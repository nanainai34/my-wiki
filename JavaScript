// ページ読み込み時に投稿内容を表示する
window.onload = function() {
    displaySection("history");
    displaySection("government");
    displaySection("culture");
    displayComments();
};

// セクションを切り替える関数
function displaySection(sectionId) {
    let sections = document.querySelectorAll('.content-section');
    sections.forEach(section => {
        section.style.display = 'none';
    });
    document.getElementById(sectionId).style.display = 'block';
}

// 投稿内容を保存する関数
function saveComment(sectionId) {
    let name = document.getElementById(sectionId + "-name").value;
    let comment = document.getElementById(sectionId + "-comment").value;

    let comments = JSON.parse(localStorage.getItem(sectionId + "-comments")) || [];
    let newComment = { name: name, comment: comment };
    comments.push(newComment);
    localStorage.setItem(sectionId + "-comments", JSON.stringify(comments));

    // 表示更新
    displayComments();
}

// 投稿内容を表示する関数
function displayComments() {
    let commentList = document.getElementById("comment-list");
    commentList.innerHTML = ""; // 現在の内容をクリア

    // 各セクションのコメントを取得して表示
    ["history", "government", "culture"].forEach(sectionId => {
        let comments = JSON.parse(localStorage.getItem(sectionId + "-comments")) || [];
        comments.forEach(comment => {
            let listItem = document.createElement("li");
            listItem.textContent = `${comment.name}: ${comment.comment}`;
            commentList.appendChild(listItem);
        });
    });
}

// フォームのコメント投稿ボタンにイベントリスナーを設定する
document.getElementById("history-form").addEventListener("submit", function(event) {
    event.preventDefault();
    saveComment("history");
// ダミーデータの初期化（実際にはデータベースやサーバーに保存する）
let comments = [];

// コメントの表示を更新する関数
function updateCommentList() {
    const commentList = document.getElementById('comment-list');
    commentList.innerHTML = ''; // コメントリストをクリア

    comments.forEach(comment => {
        const li = document.createElement('li');
        const name = document.createElement('strong');
        name.textContent = comment.name + ': ';
        const content = document.createElement('span');
        content.textContent = comment.content;
        li.appendChild(name);
        li.appendChild(content);
        commentList.appendChild(li);
    });
}

// コメントフォームの送信を処理する関数
function submitComment(event) {
    event.preventDefault();
    
    const nameInput = document.getElementById('comment-name');
    const contentInput = document.getElementById('comment-content');
    
    const name = nameInput.value.trim();
    const content = contentInput.value.trim();
    
    if (name === '' || content === '') {
        alert('名前とコメントを入力してください。');
        return;
    }
    
    // 新しいコメントオブジェクトを作成
    const newComment = {
        name: name,
        content: content
    };
    
    // ダミーデータにコメントを追加
    comments.push(newComment);
    
    // 入力欄をクリア
    nameInput.value = '';
    contentInput.value = '';
    
    // コメントリストを更新して表示
    updateCommentList();
}

// コメントフォームのイベントリスナーを設定
const commentForm = document.getElementById('comment-form');
commentForm.addEventListener('submit', submitComment);

// 初期表示時にコメントリストを更新して表示
updateCommentList();

});

document.getElementById("government-form").addEventListener("submit", function(event) {
    event.preventDefault();
    saveComment("government");
});

document.getElementById("culture-form").addEventListener("submit", function(event) {
    event.preventDefault();
    saveComment("culture");
// ダミーデータの初期化（実際にはデータベースやサーバーに保存する）
let comments = [];

// コメントの表示を更新する関数
function updateCommentList() {
    const commentList = document.getElementById('comment-list');
    commentList.innerHTML = ''; // コメントリストをクリア

    comments.forEach(comment => {
        const li = document.createElement('li');
        const name = document.createElement('strong');
        name.textContent = comment.name + ': ';
        const content = document.createElement('span');
        content.textContent = comment.content;
        li.appendChild(name);
        li.appendChild(content);
        commentList.appendChild(li);
    });
}

// コメントフォームの送信を処理する関数
function submitComment(event) {
    event.preventDefault();
    
    const nameInput = document.getElementById('comment-name');
    const contentInput = document.getElementById('comment-content');
    
    const name = nameInput.value.trim();
    const content = contentInput.value.trim();
    
    if (name === '' || content === '') {
        alert('名前とコメントを入力してください。');
        return;
    }
    
    // 新しいコメントオブジェクトを作成
    const newComment = {
        name: name,
        content: content
    };
    
    // ダミーデータにコメントを追加
    comments.push(newComment);
    
    // 入力欄をクリア
    nameInput.value = '';
    contentInput.value = '';
    
    // コメントリストを更新して表示
    updateCommentList();
}

// コメントフォームのイベントリスナーを設定
const commentForm = document.getElementById('comment-form');
commentForm.addEventListener('submit', submitComment);

// 初期表示時にコメントリストを更新して表示
updateCommentList();

});

